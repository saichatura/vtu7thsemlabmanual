import numpy as np
import pandas as pd
data = pd.DataFrame(data=pd.read_excel('CEE.xlsx'))
print(data)
concepts = np.array(data.iloc[:,0:-1])
target = np.array(data.iloc[:,-1])
def learn(concepts, target):
     specific_h = concepts[0].copy()
     print("\nInitialization of specific_h and general_h")
     print("\n",specific_h)
     general_h = [["?" for i in range(len(specific_h))] for i in range(len(specific_h))]
     print("\n",general_h)
     for i, h in enumerate(concepts):
         if target[i] == "Yes":
             for x in range(len(specific_h)):
                 if h[x] != specific_h[x]: 
                     specific_h[x] = '?'
                     general_h[x][x] = '?'
         if target[i] == "No":
             for x in range(len(specific_h)):
                 if h[x] != specific_h[x]:
                     general_h[x][x] = specific_h[x]
                 else:
                     general_h[x][x] = '?'
         print(" \nsteps of Candidate Elimination Algorithm",i+1)
         print("\nSpecific_h ",i+1,"\n ")
         print(specific_h)
         print("\ngeneral_h ", i+1, "\n ")
         print(general_h)
     indices = [i for i, val in enumerate(general_h) if val == ['?', '?', '?', '?', '?', '?']]
     for i in indices:
         general_h.remove(['?', '?', '?', '?', '?', '?'])
     return specific_h, general_h
s_final, g_final = learn(concepts, target)
print("\nFinal Specific_h:", s_final, sep="\n")
print("\nFinal General_h:", g_final, sep="\n")

>>>>>>>>>>>>>>>>>>>>>    RESULT
{   DATA SET

         sky  AirTemp  humidity  wind  water  forecast  enjoysport
   0   sunny    warm   normal  strong  warm     same        yes
   1   sunny    warm     high  strong  warm     same        yes
   2   cloudy   cold     high  strong  warm    change        no
   3   sunny    warm     high  strong  cool    change       yes   } ->  IN EXCEL SHEET AS[ CEE.xlsx ]
Initialization of specific_h and general_h

 [0 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

 [['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?']]
 
steps of Candidate Elimination Algorithm 1

Specific_h  1 
 
[0 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

general_h  1 
 
[['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?']]
 
steps of Candidate Elimination Algorithm 2

Specific_h  2 
 
[ 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

general_h  2 
 
[[ '?', '?', '?', '?', '?', '?'], [ '?', '?', '?', '?', '?', '?'], [ '?', '?', '?', '?', '?', '?'], [ '?', '?', '?', '?', '?', '?'], [ '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?']]
 
steps of Candidate Elimination Algorithm 3

Specific_h  3 
 
[ 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

general_h  3 
 
[['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?']]
 
steps of Candidate Elimination Algorithm 4

Specific_h  4 
 
[ 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

general_h  4 
 
[['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?']]

Final Specific_h:
[ 'sunny' 'warm' 'normal' 'strong' 'warm' 'same']

Final General_h:
[['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'
